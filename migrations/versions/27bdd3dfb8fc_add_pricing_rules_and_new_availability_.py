"""add pricing rules and new availability fields

Revision ID: 27bdd3dfb8fc
Revises: a8753f925f14
Create Date: 2025-10-24 14:35:49.565510

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '27bdd3dfb8fc'
down_revision = 'a8753f925f14'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pricing_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price_modifier', sa.Float(), nullable=False),
    sa.Column('fixed_price', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.add_column(sa.Column('closed_manually', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('maintenance_block', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('daily_price', sa.Float(), nullable=True))
        batch_op.alter_column('room_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('room_type_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('base_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('total_rooms', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('rooms_per_floor', sa.Integer(), nullable=True))
        batch_op.drop_column('price_per_night')

    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.alter_column('floor',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.alter_column('floor',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
        batch_op.drop_column('status')

    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price_per_night', sa.NUMERIC(precision=10, scale=2), nullable=False))
        batch_op.drop_column('rooms_per_floor')
        batch_op.drop_column('total_rooms')
        batch_op.drop_column('base_price')

    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.alter_column('room_type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('room_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('daily_price')
        batch_op.drop_column('maintenance_block')
        batch_op.drop_column('closed_manually')

    op.drop_table('pricing_rules')
    # ### end Alembic commands ###
